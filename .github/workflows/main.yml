name: CI-CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 963665911471.dkr.ecr.us-east-1.amazonaws.com/poc
  SONAR_HOST_URL: http://54.224.7.27:9000
  SONAR_PROJECT_KEY: poc-5

jobs:
  build:
    runs-on: ubuntu-latest   # âœ… change to [self-hosted, ec2-label] if you want to run on self-hosted directly

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven Build
        run: mvn clean compile

      
      - name: SonarQube Scan with Quality Gate
        uses: sonarsource/sonarqube-scan-action@v4.1.0
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.java.binaries=target/classes
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

      - name: Build Docker Image
        run: docker build -t ${{ env.ECR_REGISTRY }}:${{ github.run_number }} .

      - name: Trivy Security Scan
        run: trivy image --exit-code 0 --severity HIGH,CRITICAL --format json -o trivy-report.json ${{ env.ECR_REGISTRY }}:${{ github.run_number }}

      - name: Push to ECR
        run: docker push ${{ env.ECR_REGISTRY }}:${{ github.run_number }}

      - name: Deploy to Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig
          sed "s|IMAGE_TAG|${{ github.run_number }}|g" k8s/deployment.yaml > k8s/deployment.generated.yaml
          kubectl apply -f k8s/deployment.generated.yaml
